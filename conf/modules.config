/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

if (params.mode == "qc") {
    process {
        withLabel: 'process_high' { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
        withLabel: 'process_med' { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
        withLabel: 'process_low' { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
        withName: HTMLREPORT {
            publishDir = [
                path: { "${params.output_dir}/" },
                mode: 'copy'
            ]
        }
        withName: PLOTHEATMAP {
            publishDir = [
                path: { "${params.output_dir}/" },
                mode: 'copy'
            ]
        }
        withName: ADDCLUSTERINGORDER {
            publishDir = [
                path: { "${params.output_dir}/" },
                mode: 'copy'
            ]
        }
        withName: CONCATREADS {
            publishDir = [
                path: { "${params.output_dir}/" },
                mode: 'copy'
            ]
        }
        withName: CONCATSEGMENTS {
            publishDir = [
                path: { "${params.output_dir}/" },
                mode: 'copy'
            ]
        }
        withName: CONCATPARAMS {
            publishDir = [
                path: { "${params.output_dir}/" },
                mode: 'copy'
            ]
        }
        withName: HMMTAR {
            publishDir = [
                path: { "${params.output_dir}/" },
                mode: 'copy'
            ]
        }
        withName: CONCATGCMETRICS {
            publishDir = [
                path: { "${params.output_dir}/" },
                mode: 'copy'
            ]
        }
        withName: ALIGNTAR {
            publishDir = [
                path: { "${params.output_dir}/" },
                mode: 'copy'
            ]
        }
        withName: BAMMERGE {
            publishDir = [
                path: { "${params.output_dir}/" },
                mode: 'copy'
            ]
        }
        withName: RECOPYMETADATA {
            publishDir = [
                path: { "${params.output_dir}/" },
                mode: 'copy'
            ]
        }
    }
}

if (params.mode=="counthaps") {
    process {
        withName: SPLITBAM { container = "quay.io/mondrianscwgs/haplotype_calling:v0.0.93" }
        withName: CREATESEGMENTS { container = "quay.io/mondrianscwgs/haplotype_calling:v0.0.93" }
        withName: CONVERTHAPLOTYPESCSVTOTSV { container = "quay.io/mondrianscwgs/haplotype_calling:v0.0.93" }
        withName: EXTRACTSEQDATAANDREADCOUNT { container = "quay.io/mondrianscwgs/haplotype_calling:v0.0.93" }
        withName: CONCATALLELECOUNTS {
            container = "quay.io/mondrianscwgs/haplotype_calling:v0.0.93"
            publishDir = [
                path: { "${params.output_dir}/" },
                mode: 'copy'
            ]
        }
    }
}


if (params.mode=="inferhaps") {
    process {
        withName: GETREGIONS { container = "quay.io/mondrianscwgs/haplotype_calling:v0.0.93" }
        withName: BCFTOOLSMPILEUP { container = "quay.io/mondrianscwgs/haplotype_calling:v0.0.93" }
        withName: BCFTOOLSFILTERHET { container = "quay.io/mondrianscwgs/haplotype_calling:v0.0.93" }
        withName: BCFTOOLSCONCATVCF { container = "quay.io/mondrianscwgs/haplotype_calling:v0.0.93" }
        withName: SHAPEIT { container = "quay.io/mondrianscwgs/haplotype_calling:v0.0.93" }
        withName: CONCATCSV { container = "quay.io/mondrianscwgs/haplotype_calling:v0.0.93" }
        withName: INFERHAPSMETADATA { container = "quay.io/mondrianscwgs/haplotype_calling:v0.0.93" }
        withName: 'CONCATCSV|INFERHAPSMETADATA' {
            publishDir = [
                path: { "${params.output_dir}/" },
                mode: 'copy'
            ]
        }
    }
}


if (params.mode=="snv_genotyping") {
    process {
        withName: MERGEVCFS { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
        withName: REMOVEDUPLICATES { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
        withName: REMOVEBLACKLISTEDCALLS { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
        withName: SPLITVCFBYNUMLINES { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
        withName: CONCATCSV { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
        withName: GENERATEBARCODES { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
        withName: VARTRIX { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
        withName: SNVGENOTYPINGMETADATA { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
        withName: REGENERATEVARTRIXOUTPUTS { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
        withName: 'REGENERATEVARTRIXOUTPUTS|CONCATCSV|SNVGENOTYPINGMETADATA' {
            publishDir = [
                path: { "${params.output_dir}/" },
                mode: 'copy'
            ]
        }
    }
}


if (params.mode=="normalizer") {
    process {
        withName: IDENTIFYNORMALS { container = "quay.io/mondrianscwgs/alignment:v0.0.93" }
        withName: ANEUPLOIDYHEATMAP { container = "quay.io/mondrianscwgs/alignment:v0.0.93" }
        withName: SEPARATETUMORANDNORMALBAMS { container = "quay.io/mondrianscwgs/alignment:v0.0.93" }
        withName: NORMALIZERMETADATA { container = "quay.io/mondrianscwgs/alignment:v0.0.93" }
        withName: NORMALIZERQCMETADATA { container = "quay.io/mondrianscwgs/alignment:v0.0.93" }
        withName: 'NORMALIZERQCMETADATA|NORMALIZERMETADATA|SEPARATETUMORANDNORMALBAMS|ANEUPLOIDYHEATMAP|IDENTIFYNORMALS' {
            publishDir = [
                path: { "${params.output_dir}/" },
                mode: 'copy'
            ]
        }
    }
}



if (params.mode=="breakpoint") {
    process {
        withName: 'GETNORMALDISCORDANT' { container = "quay.io/mondrianscwgs/breakpoint_calling:v0.0.93" }
        withName: 'GETTUMORDISCORDANT' { container = "quay.io/mondrianscwgs/breakpoint_calling:v0.0.93" }
        withName: 'GETNORMALSPLIT' { container = "quay.io/mondrianscwgs/breakpoint_calling:v0.0.93" }
        withName: 'GETTUMORSPLIT' { container = "quay.io/mondrianscwgs/breakpoint_calling:v0.0.93" }
        withName: 'LUMPYEXPRESS' { container = "quay.io/mondrianscwgs/breakpoint_calling:v0.0.93" }
        withName: 'GRIDSS' { container = "quay.io/mondrianscwgs/breakpoint_calling:v0.0.93" }
        withName: 'SVABA' { container = "quay.io/mondrianscwgs/breakpoint_calling:v0.0.93" }
        withName: 'DESTRUCT' { container = "quay.io/mondrianscwgs/breakpoint_calling:v0.0.93" }
        withName: 'EXTRACTSOMATIC' { container = "quay.io/mondrianscwgs/breakpoint_calling:v0.0.93" }
        withName: 'EXTRACTCOUNTS' { container = "quay.io/mondrianscwgs/breakpoint_calling:v0.0.93" }
        withName: 'DESTRUCT_TO_VCF' { container = "quay.io/mondrianscwgs/breakpoint_calling:v0.0.93" }
        withName: 'GETREGIONS' { container = "quay.io/mondrianscwgs/breakpoint_calling:v0.0.93" }
        withName: BREAKPOINTCONSENSUS { container = "quay.io/mondrianscwgs/breakpoint_calling:v0.0.93" }
        withName: BREAKPOINTMETADATA { container = "quay.io/mondrianscwgs/breakpoint_calling:v0.0.93" }
        withName: 'BREAKPOINTMETADATA|EXTRACTSOMATIC|EXTRACTCOUNTS|DESTRUCT_TO_VCF|LUMPYEXPRESS|GRIDSS|SVABA|CSVERVEREMOVEDUPLICATES' {
            publishDir = [
                path: { "${params.output_dir}/" },
                mode: 'copy'
            ]
        }
        withName: 'DESTRUCT' {
            publishDir = [
                path: { "${params.output_dir}/" },
                mode: 'copy',
                pattern: '*read_table.csv*'
            ]
        }
    }
}


if (params.mode=="variant") {
    process {
        withName: 'GETREGIONS' { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
        withName: 'NORMALVARIANTBAM' { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
        withName: 'TUMORVARIANTBAM' { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
        withName: 'TUMORMERGEBAMS' { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
        withName: 'NORMALMERGEBAMS' { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
        withName: 'MUSEQ|CONCAT_MUSEQ|REHEADER_MUSEQ' { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
        withName: 'GETGENOMESIZE|GENERATECHROMDEPTH|STRELKA' { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
        withName: 'CONCAT_STRELKA_SNV|FILTER_STRELKA_SNV|REHEADER_STRELKA_SNV' { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
        withName: 'CONCAT_STRELKA_INDEL|FILTER_STRELKA_INDEL|REHEADER_STRELKA_INDEL' { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
        withLabel: 'process_high' { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
        withLabel: 'process_med' { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
        withLabel: 'process_low' { container = "quay.io/mondrianscwgs/variant_calling:v0.0.93" }
    }
}